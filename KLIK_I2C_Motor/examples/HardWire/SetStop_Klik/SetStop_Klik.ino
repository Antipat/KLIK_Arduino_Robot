// ПРИМЕР ОСТАНОВКИ МОТОРА НА ЗАДАННОМ РАССТОЯНИИ:        // * Строки со звёздочкой являются необязательными.
                                                 //
#include <Wire.h>                                 //   Подключаем библиотеку для работы с аппаратной шиной I2C, до подключения библиотеки KLIK_I2C_Motor.
#include <KLIK_I2C_Motor.h>                   //   Подключаем библиотеку для работы с мотором I2C-flash.
KLIK_I2C_Motor mot(0x09);                     //   Объявляем объект mot для работы с функциями и методами библиотеки KLIK_I2C_Motor, указывая адрес модуля на шине I2C.

int PWM_Speed = 70;                            // скорость шим
float k = 1.0;                                                  //   Если объявить объект без указания адреса (KLIK_I2C_Motor mot;), то адрес будет найден автоматически.
void setup(){                                     //
    delay(500);                                   // * Ждём завершение переходных процессов связанных с подачей питания.
    Serial.begin(9600);                           //
    while(!Serial){;}                             // * Ждём завершения инициализации шины UART.
    mot.begin(&Wire); // &Wire1, &Wire2 ...       //   Инициируем работу с мотором, указав ссылку на объект для работы с шиной I2C на которой находится мотор (по умолчанию &Wire).
    mot.radius = 12.2;                            //   Указываем радиус колеса в мм - оно связано с вычислением пройденного пути.
    mot.setSpeed(PWM_Speed, MOT_PWM);             // назначение скорости
  }                                                 //
                                                  //
void loop(){
  // Вывод пройденного расстояния
  Serial.println("Пройдено расстояние ");
  Serial.println(mot.getSum(MOT_MET));
  //Остановка мотора по прохождению 2 метров
      if (mot.getSum(MOT_MET)>= 2.0f)
      {
        mot.setStop();  // остановка мотора
        mot.setStopNeutral(true);  // плавная (true) и резкая (false) остановка 
        }                          
}                                                 //
